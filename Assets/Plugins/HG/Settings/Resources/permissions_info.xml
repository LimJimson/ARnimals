<?xml version="1.0" encoding="utf-8"?>
<root>
 <Permissions>
  <Permission apiLevel="1" category="" constantValue="android.permission.ACCESS_CHECKIN_PROPERTIES" description='Allows read/write access to the "properties" table in the checkin database, to change values that get uploaded.' name="ACCESS_CHECKIN_PROPERTIES" protectionLevel="not_third_party"/>
  <Permission apiLevel="1" category="LOCATION" constantValue="android.permission.ACCESS_COARSE_LOCATION" description="Allows an app to access approximate location. Alternatively, you might want ACCESS_FINE_LOCATION." name="ACCESS_COARSE_LOCATION" protectionLevel="dangerous"/>
  <Permission apiLevel="1" category="LOCATION" constantValue="android.permission.ACCESS_FINE_LOCATION" description="Allows an app to access precise location. Alternatively, you might want ACCESS_COARSE_LOCATION." name="ACCESS_FINE_LOCATION" protectionLevel="dangerous"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.ACCESS_LOCATION_EXTRA_COMMANDS" description="Allows an application to access extra location provider commands." name="ACCESS_LOCATION_EXTRA_COMMANDS" protectionLevel="normal"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.ACCESS_NETWORK_STATE" description="Allows applications to access information about networks." name="ACCESS_NETWORK_STATE" protectionLevel="normal"/>
  <Permission apiLevel="23" category="" constantValue="android.permission.ACCESS_NOTIFICATION_POLICY" description="Marker permission for applications that wish to access notification policy." name="ACCESS_NOTIFICATION_POLICY" protectionLevel="normal"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.ACCESS_WIFI_STATE" description="Allows applications to access information about Wi-Fi networks." name="ACCESS_WIFI_STATE" protectionLevel="normal"/>
  <Permission apiLevel="5" category="" constantValue="android.permission.ACCOUNT_MANAGER" description="Allows applications to call into AccountAuthenticators." name="ACCOUNT_MANAGER" protectionLevel="not_third_party"/>
  <Permission apiLevel="14" category="PHONE" constantValue="com.android.voicemail.permission.ADD_VOICEMAIL" description="Allows an application to add voicemails into the system." name="ADD_VOICEMAIL" protectionLevel="dangerous"/>
  <Permission apiLevel="26" category="PHONE" constantValue="android.permission.ANSWER_PHONE_CALLS" description="Allows the app to answer an incoming phone call." name="ANSWER_PHONE_CALLS" protectionLevel="dangerous"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.BATTERY_STATS" description="Allows an application to collect battery statistics" name="BATTERY_STATS" protectionLevel="unknown"/>
  <Permission apiLevel="16" category="" constantValue="android.permission.BIND_ACCESSIBILITY_SERVICE" description="Must be required by an AccessibilityService, to ensure that only the system can bind to it." name="BIND_ACCESSIBILITY_SERVICE" protectionLevel="signature"/>
  <Permission apiLevel="3" category="" constantValue="android.permission.BIND_APPWIDGET" description="Allows an application to tell the AppWidget service which application can access AppWidget's data. The normal user flow is that a user picks an AppWidget to go into a particular host, thereby giving that host application access to the private data from the AppWidget app. An application that has this permission should honor that contract." name="BIND_APPWIDGET" protectionLevel="not_third_party"/>
  <Permission apiLevel="26" category="" constantValue="android.permission.BIND_AUTOFILL_SERVICE" description="Must be required by a AutofillService, to ensure that only the system can bind to it." name="BIND_AUTOFILL_SERVICE" protectionLevel="signature"/>
  <Permission apiLevel="22" category="" constantValue="android.permission.BIND_CARRIER_MESSAGING_SERVICE" description=" This constant was deprecated in API level 23. Use BIND_CARRIER_SERVICES instead" name="BIND_CARRIER_MESSAGING_SERVICE" protectionLevel="unknown"/>
  <Permission apiLevel="23" category="" constantValue="android.permission.BIND_CARRIER_SERVICES" description="The system process that is allowed to bind to services in carrier apps will have this permission. Carrier apps should use this permission to protect their services that only the system is allowed to bind to." name="BIND_CARRIER_SERVICES" protectionLevel="signature|privileged"/>
  <Permission apiLevel="23" category="" constantValue="android.permission.BIND_CHOOSER_TARGET_SERVICE" description="Must be required by a ChooserTargetService, to ensure that only the system can bind to it." name="BIND_CHOOSER_TARGET_SERVICE" protectionLevel="signature"/>
  <Permission apiLevel="24" category="" constantValue="android.permission.BIND_CONDITION_PROVIDER_SERVICE" description="Must be required by a ConditionProviderService, to ensure that only the system can bind to it." name="BIND_CONDITION_PROVIDER_SERVICE" protectionLevel="signature"/>
  <Permission apiLevel="8" category="" constantValue="android.permission.BIND_DEVICE_ADMIN" description="Must be required by device administration receiver, to ensure that only the system can interact with it." name="BIND_DEVICE_ADMIN" protectionLevel="signature"/>
  <Permission apiLevel="21" category="" constantValue="android.permission.BIND_DREAM_SERVICE" description="Must be required by an DreamService, to ensure that only the system can bind to it." name="BIND_DREAM_SERVICE" protectionLevel="signature"/>
  <Permission apiLevel="23" category="" constantValue="android.permission.BIND_INCALL_SERVICE" description="Must be required by a InCallService, to ensure that only the system can bind to it." name="BIND_INCALL_SERVICE" protectionLevel="signature|privileged"/>
  <Permission apiLevel="3" category="" constantValue="android.permission.BIND_INPUT_METHOD" description="Must be required by an InputMethodService, to ensure that only the system can bind to it." name="BIND_INPUT_METHOD" protectionLevel="signature"/>
  <Permission apiLevel="23" category="" constantValue="android.permission.BIND_MIDI_DEVICE_SERVICE" description="Must be required by an MidiDeviceService, to ensure that only the system can bind to it." name="BIND_MIDI_DEVICE_SERVICE" protectionLevel="signature"/>
  <Permission apiLevel="19" category="" constantValue="android.permission.BIND_NFC_SERVICE" description="Must be required by a HostApduService or OffHostApduService to ensure that only the system can bind to it." name="BIND_NFC_SERVICE" protectionLevel="signature"/>
  <Permission apiLevel="18" category="" constantValue="android.permission.BIND_NOTIFICATION_LISTENER_SERVICE" description="Must be required by an NotificationListenerService, to ensure that only the system can bind to it." name="BIND_NOTIFICATION_LISTENER_SERVICE" protectionLevel="signature"/>
  <Permission apiLevel="19" category="" constantValue="android.permission.BIND_PRINT_SERVICE" description="Must be required by a PrintService, to ensure that only the system can bind to it." name="BIND_PRINT_SERVICE" protectionLevel="signature"/>
  <Permission apiLevel="24" category="" constantValue="android.permission.BIND_QUICK_SETTINGS_TILE" description="Allows an application to bind to third party quick settings tiles. Should only be requested by the System, should be required by TileService declarations." name="BIND_QUICK_SETTINGS_TILE" protectionLevel="unknown"/>
  <Permission apiLevel="11" category="" constantValue="android.permission.BIND_REMOTEVIEWS" description="Must be required by a RemoteViewsService, to ensure that only the system can bind to it." name="BIND_REMOTEVIEWS" protectionLevel="unknown"/>
  <Permission apiLevel="24" category="" constantValue="android.permission.BIND_SCREENING_SERVICE" description="Must be required by a CallScreeningService, to ensure that only the system can bind to it." name="BIND_SCREENING_SERVICE" protectionLevel="signature|privileged"/>
  <Permission apiLevel="23" category="" constantValue="android.permission.BIND_TELECOM_CONNECTION_SERVICE" description="Must be required by a ConnectionService, to ensure that only the system can bind to it." name="BIND_TELECOM_CONNECTION_SERVICE" protectionLevel="signature|privileged"/>
  <Permission apiLevel="14" category="" constantValue="android.permission.BIND_TEXT_SERVICE" description="Must be required by a TextService (e.g. SpellCheckerService) to ensure that only the system can bind to it." name="BIND_TEXT_SERVICE" protectionLevel="signature"/>
  <Permission apiLevel="21" category="" constantValue="android.permission.BIND_TV_INPUT" description="Must be required by a TvInputService to ensure that only the system can bind to it." name="BIND_TV_INPUT" protectionLevel="signature|privileged"/>
  <Permission apiLevel="26" category="" constantValue="android.permission.BIND_VISUAL_VOICEMAIL_SERVICE" description="Must be required by a link VisualVoicemailService to ensure that only the system can bind to it." name="BIND_VISUAL_VOICEMAIL_SERVICE" protectionLevel="signature|privileged"/>
  <Permission apiLevel="21" category="" constantValue="android.permission.BIND_VOICE_INTERACTION" description="Must be required by a VoiceInteractionService, to ensure that only the system can bind to it." name="BIND_VOICE_INTERACTION" protectionLevel="signature"/>
  <Permission apiLevel="14" category="" constantValue="android.permission.BIND_VPN_SERVICE" description="Must be required by a VpnService, to ensure that only the system can bind to it." name="BIND_VPN_SERVICE" protectionLevel="signature"/>
  <Permission apiLevel="24" category="" constantValue="android.permission.BIND_VR_LISTENER_SERVICE" description="Must be required by an VrListenerService, to ensure that only the system can bind to it." name="BIND_VR_LISTENER_SERVICE" protectionLevel="signature"/>
  <Permission apiLevel="8" category="" constantValue="android.permission.BIND_WALLPAPER" description="Must be required by a WallpaperService, to ensure that only the system can bind to it." name="BIND_WALLPAPER" protectionLevel="signature|privileged"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.BLUETOOTH" description="Allows applications to connect to paired bluetooth devices." name="BLUETOOTH" protectionLevel="normal"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.BLUETOOTH_ADMIN" description="Allows applications to discover and pair bluetooth devices." name="BLUETOOTH_ADMIN" protectionLevel="normal"/>
  <Permission apiLevel="19" category="" constantValue="android.permission.BLUETOOTH_PRIVILEGED" description="Allows applications to pair bluetooth devices without user interaction, and to allow or disallow phonebook access or message access. This is not available to third party applications." name="BLUETOOTH_PRIVILEGED" protectionLevel="unknown"/>
  <Permission apiLevel="20" category="SENSORS" constantValue="android.permission.BODY_SENSORS" description="Allows an application to access data from sensors that the user uses to measure what is happening inside his/her body, such as heart rate." name="BODY_SENSORS" protectionLevel="dangerous"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.BROADCAST_PACKAGE_REMOVED" description="Allows an application to broadcast a notification that an application package has been removed." name="BROADCAST_PACKAGE_REMOVED" protectionLevel="not_third_party"/>
  <Permission apiLevel="2" category="" constantValue="android.permission.BROADCAST_SMS" description="Allows an application to broadcast an SMS receipt notification." name="BROADCAST_SMS" protectionLevel="not_third_party"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.BROADCAST_STICKY" description="Allows an application to broadcast sticky intents. These are broadcasts whose data is held by the system after being finished, so that clients can quickly retrieve that data without having to wait for the next broadcast." name="BROADCAST_STICKY" protectionLevel="normal"/>
  <Permission apiLevel="2" category="" constantValue="android.permission.BROADCAST_WAP_PUSH" description="Allows an application to broadcast a WAP PUSH receipt notification." name="BROADCAST_WAP_PUSH" protectionLevel="not_third_party"/>
  <Permission apiLevel="1" category="PHONE" constantValue="android.permission.CALL_PHONE" description="Allows an application to initiate a phone call without going through the Dialer user interface for the user to confirm the call." name="CALL_PHONE" protectionLevel="dangerous"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.CALL_PRIVILEGED" description="Allows an application to call any phone number, including emergency numbers, without going through the Dialer user interface for the user to confirm the call being placed." name="CALL_PRIVILEGED" protectionLevel="not_third_party"/>
  <Permission apiLevel="1" category="CAMERA" constantValue="android.permission.CAMERA" description="Required to be able to access the camera device. This will automatically enforce the } manifest element for all camera features. If you do not require all camera features or can properly operate if a camera is not available, then you must modify your manifest as appropriate in order to install on devices that don't support all camera features." name="CAMERA" protectionLevel="dangerous"/>
  <Permission apiLevel="19" category="" constantValue="android.permission.CAPTURE_AUDIO_OUTPUT" description="Allows an application to capture audio output." name="CAPTURE_AUDIO_OUTPUT" protectionLevel="not_third_party"/>
  <Permission apiLevel="19" category="" constantValue="android.permission.CAPTURE_SECURE_VIDEO_OUTPUT" description="Allows an application to capture secure video output." name="CAPTURE_SECURE_VIDEO_OUTPUT" protectionLevel="not_third_party"/>
  <Permission apiLevel="19" category="" constantValue="android.permission.CAPTURE_VIDEO_OUTPUT" description="Allows an application to capture video output." name="CAPTURE_VIDEO_OUTPUT" protectionLevel="not_third_party"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.CHANGE_COMPONENT_ENABLED_STATE" description="Allows an application to change whether an application component (other than its own) is enabled or not." name="CHANGE_COMPONENT_ENABLED_STATE" protectionLevel="not_third_party"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.CHANGE_CONFIGURATION" description="Allows an application to modify the current configuration, such as locale." name="CHANGE_CONFIGURATION" protectionLevel="unknown"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.CHANGE_NETWORK_STATE" description="Allows applications to change network connectivity state." name="CHANGE_NETWORK_STATE" protectionLevel="normal"/>
  <Permission apiLevel="4" category="" constantValue="android.permission.CHANGE_WIFI_MULTICAST_STATE" description="Allows applications to enter Wi-Fi Multicast mode." name="CHANGE_WIFI_MULTICAST_STATE" protectionLevel="normal"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.CHANGE_WIFI_STATE" description="Allows applications to change Wi-Fi connectivity state." name="CHANGE_WIFI_STATE" protectionLevel="normal"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.CLEAR_APP_CACHE" description="Allows an application to clear the caches of all installed applications on the device." name="CLEAR_APP_CACHE" protectionLevel="signature|privileged"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.CONTROL_LOCATION_UPDATES" description="Allows enabling/disabling location update notifications from the radio." name="CONTROL_LOCATION_UPDATES" protectionLevel="not_third_party"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.DELETE_CACHE_FILES" description="Allows an application to delete cache files." name="DELETE_CACHE_FILES" protectionLevel="not_third_party"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.DELETE_PACKAGES" description="Allows an application to delete packages. Starting in N, user confirmation is requested when the application deleting the package is not the same application that installed the package." name="DELETE_PACKAGES" protectionLevel="not_third_party"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.DIAGNOSTIC" description="Allows applications to RW to diagnostic resources." name="DIAGNOSTIC" protectionLevel="not_third_party"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.DISABLE_KEYGUARD" description="Allows applications to disable the keyguard if it is not secure." name="DISABLE_KEYGUARD" protectionLevel="normal"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.DUMP" description="Allows an application to retrieve state dump information from system services." name="DUMP" protectionLevel="not_third_party"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.EXPAND_STATUS_BAR" description="Allows an application to expand or collapse the status bar." name="EXPAND_STATUS_BAR" protectionLevel="normal"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.FACTORY_TEST" description="Run as a manufacturer test application, running as the root user. Only available when the device is running in manufacturer test mode." name="FACTORY_TEST" protectionLevel="not_third_party"/>
  <Permission apiLevel="1" category="CONTACTS" constantValue="android.permission.GET_ACCOUNTS" description='Allows access to the list of accounts in the Accounts Service. Note: Beginning with Android 6.0 (API level 23), if an app shares the signature of the authenticator that manages an account, it does not need "GET_ACCOUNTS" permission to read information about that account. On Android 5.1 and lower, all apps need "GET_ACCOUNTS" permission to read information about any account.' name="GET_ACCOUNTS" protectionLevel="dangerous"/>
  <Permission apiLevel="23" category="" constantValue="android.permission.GET_ACCOUNTS_PRIVILEGED" description="Allows access to the list of accounts in the Accounts Service." name="GET_ACCOUNTS_PRIVILEGED" protectionLevel="unknown"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.GET_PACKAGE_SIZE" description="Allows an application to find out the space used by any package." name="GET_PACKAGE_SIZE" protectionLevel="normal"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.GET_TASKS" description=" This constant was deprecated in API level 21. No longer enforced." name="GET_TASKS" protectionLevel="unknown"/>
  <Permission apiLevel="4" category="" constantValue="android.permission.GLOBAL_SEARCH" description="This permission can be used on content providers to allow the global search system to access their data. Typically it used when the provider has some permissions protecting it (which global search would not be expected to hold), and added as a read-only permission to the path in the provider where global search queries are performed. This permission can not be held by regular applications; it is used by applications to protect themselves from everyone else besides global search." name="GLOBAL_SEARCH" protectionLevel="unknown"/>
  <Permission apiLevel="4" category="" constantValue="android.permission.INSTALL_LOCATION_PROVIDER" description="Allows an application to install a location provider into the Location Manager." name="INSTALL_LOCATION_PROVIDER" protectionLevel="not_third_party"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.INSTALL_PACKAGES" description="Allows an application to install packages." name="INSTALL_PACKAGES" protectionLevel="not_third_party"/>
  <Permission apiLevel="19" category="" constantValue="com.android.launcher.permission.INSTALL_SHORTCUT" description="Allows an application to install a shortcut in Launcher. In Android O (API level 26) and higher, the INSTALL_SHORTCUT broadcast no longer has any effect on your app because it's a private, implicit broadcast. Instead, you should create an app shortcut by using the requestPinShortcut() method from the ShortcutManager class." name="INSTALL_SHORTCUT" protectionLevel="normal"/>
  <Permission apiLevel="26" category="" constantValue="android.permission.INSTANT_APP_FOREGROUND_SERVICE" description="Allows an instant app to create foreground services." name="INSTANT_APP_FOREGROUND_SERVICE" protectionLevel="unknown"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.INTERNET" description="Allows applications to open network sockets." name="INTERNET" protectionLevel="normal"/>
  <Permission apiLevel="8" category="" constantValue="android.permission.KILL_BACKGROUND_PROCESSES" description="Allows an application to call killBackgroundProcesses(String)." name="KILL_BACKGROUND_PROCESSES" protectionLevel="normal"/>
  <Permission apiLevel="18" category="" constantValue="android.permission.LOCATION_HARDWARE" description="Allows an application to use location features in hardware, such as the geofencing api." name="LOCATION_HARDWARE" protectionLevel="not_third_party"/>
  <Permission apiLevel="19" category="" constantValue="android.permission.MANAGE_DOCUMENTS" description="Allows an application to manage access to documents, usually as part of a document picker. This permission should only be requested by the platform document management app. This permission cannot be granted to third-party apps." name="MANAGE_DOCUMENTS" protectionLevel="signature"/>
  <Permission apiLevel="26" category="" constantValue="android.permission.MANAGE_OWN_CALLS" description="Allows a calling application which manages it own calls through the self-managed ConnectionService APIs. See {@link android.telecom.PhoneAccount#CAPABILITY_SELF_MANAGED for more information on the self-managed ConnectionService APIs." name="MANAGE_OWN_CALLS" protectionLevel="normal"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.MASTER_CLEAR" description="No info" name="MASTER_CLEAR" protectionLevel="not_third_party"/>
  <Permission apiLevel="19" category="" constantValue="android.permission.MEDIA_CONTENT_CONTROL" description="Allows an application to know what content is playing and control its playback. Not for use by third-party applications due to privacy of media consumption" name="MEDIA_CONTENT_CONTROL" protectionLevel="unknown"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.MODIFY_AUDIO_SETTINGS" description="Allows an application to modify global audio settings." name="MODIFY_AUDIO_SETTINGS" protectionLevel="normal"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.MODIFY_PHONE_STATE" description="Allows modification of the telephony state - power on, mmi, etc. Does not include placing calls." name="MODIFY_PHONE_STATE" protectionLevel="not_third_party"/>
  <Permission apiLevel="3" category="" constantValue="android.permission.MOUNT_FORMAT_FILESYSTEMS" description="Allows formatting file systems for removable storage." name="MOUNT_FORMAT_FILESYSTEMS" protectionLevel="not_third_party"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.MOUNT_UNMOUNT_FILESYSTEMS" description="Allows mounting and unmounting file systems for removable storage." name="MOUNT_UNMOUNT_FILESYSTEMS" protectionLevel="not_third_party"/>
  <Permission apiLevel="9" category="" constantValue="android.permission.NFC" description="Allows applications to perform I/O operations over NFC." name="NFC" protectionLevel="normal"/>
  <Permission apiLevel="23" category="" constantValue="android.permission.PACKAGE_USAGE_STATS" description="Allows an application to collect component usage statistics Declaring the permission implies intention to use the API and the user of the device can grant permission through the Settings application." name="PACKAGE_USAGE_STATS" protectionLevel="unknown"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.PERSISTENT_ACTIVITY" description=" This constant was deprecated in API level 9. This functionality will be removed in the future; please do not use. Allow an application to make its activities persistent." name="PERSISTENT_ACTIVITY" protectionLevel="unknown"/>
  <Permission apiLevel="1" category="PHONE" constantValue="android.permission.PROCESS_OUTGOING_CALLS" description="Allows an application to see the number being dialed during an outgoing call with the option to redirect the call to a different number or abort the call altogether." name="PROCESS_OUTGOING_CALLS" protectionLevel="dangerous"/>
  <Permission apiLevel="1" category="CALENDAR" constantValue="android.permission.READ_CALENDAR" description="Allows an application to read the user's calendar data." name="READ_CALENDAR" protectionLevel="dangerous"/>
  <Permission apiLevel="16" category="PHONE" constantValue="android.permission.READ_CALL_LOG" description="Allows an application to read the user's call log. Note: If your app uses the READ_CONTACTS permission and both your minSdkVersion and targetSdkVersion values are set to 15 or lower, the system implicitly grants your app this permission. If you don't need this permission, be sure your targetSdkVersion is 16 or higher." name="READ_CALL_LOG" protectionLevel="dangerous"/>
  <Permission apiLevel="1" category="CONTACTS" constantValue="android.permission.READ_CONTACTS" description="Allows an application to read the user's contacts data." name="READ_CONTACTS" protectionLevel="dangerous"/>
  <Permission apiLevel="16" category="STORAGE" constantValue="android.permission.READ_EXTERNAL_STORAGE" description="Allows an application to read from external storage. Any app that declares the WRITE_EXTERNAL_STORAGE permission is implicitly granted this permission. This permission is enforced starting in API level 19. Before API level 19, this permission is not enforced and all apps still have access to read from external storage. You can test your app with the permission enforced by enabling Protect USB storage under Developer options in the Settings app on a device running Android 4.1 or higher. Also starting in API level 19, this permission is not required to read/write files in your application-specific directories returned by getExternalFilesDir(String) and getExternalCacheDir(). Note: If both your minSdkVersion and targetSdkVersion values are set to 3 or lower, the system implicitly grants your app this permission. If you don't need this permission, be sure your targetSdkVersion is 4 or higher." name="READ_EXTERNAL_STORAGE" protectionLevel="dangerous"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.READ_FRAME_BUFFER" description="Allows an application to take screen shots and more generally get access to the frame buffer data." name="READ_FRAME_BUFFER" protectionLevel="not_third_party"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.READ_INPUT_STATE" description=" This constant was deprecated in API level 16. The API that used this permission has been removed. Allows an application to retrieve the current state of keys and switches." name="READ_INPUT_STATE" protectionLevel="not_third_party"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.READ_LOGS" description="Allows an application to read the low-level system log files. Not for use by third-party applications, because Log entries can contain the user's private information." name="READ_LOGS" protectionLevel="unknown"/>
  <Permission apiLevel="26" category="PHONE" constantValue="android.permission.READ_PHONE_NUMBERS" description="Allows read access to the device's phone number(s). This is a subset of the capabilities granted by READ_PHONE_STATE but is exposed to instant applications." name="READ_PHONE_NUMBERS" protectionLevel="dangerous"/>
  <Permission apiLevel="1" category="PHONE" constantValue="android.permission.READ_PHONE_STATE" description="Allows read only access to phone state, including the phone number of the device, current cellular network information, the status of any ongoing calls, and a list of any PhoneAccounts registered on the device. Note: If both your minSdkVersion and targetSdkVersion values are set to 3 or lower, the system implicitly grants your app this permission. If you don't need this permission, be sure your targetSdkVersion is 4 or higher." name="READ_PHONE_STATE" protectionLevel="dangerous"/>
  <Permission apiLevel="1" category="SMS" constantValue="android.permission.READ_SMS" description="Allows an application to read SMS messages." name="READ_SMS" protectionLevel="dangerous"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.READ_SYNC_SETTINGS" description="Allows applications to read the sync settings." name="READ_SYNC_SETTINGS" protectionLevel="normal"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.READ_SYNC_STATS" description="Allows applications to read the sync stats." name="READ_SYNC_STATS" protectionLevel="normal"/>
  <Permission apiLevel="21" category="" constantValue="com.android.voicemail.permission.READ_VOICEMAIL" description="Allows an application to read voicemails in the system." name="READ_VOICEMAIL" protectionLevel="signature|privileged"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.REBOOT" description="Required to be able to reboot the device." name="REBOOT" protectionLevel="not_third_party"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.RECEIVE_BOOT_COMPLETED" description="Allows an application to receive the ACTION_BOOT_COMPLETED that is broadcast after the system finishes booting. If you don't request this permission, you will not receive the broadcast at that time. Though holding this permission does not have any security implications, it can have a negative impact on the user experience by increasing the amount of time it takes the system to start and allowing applications to have themselves running without the user being aware of them. As such, you must explicitly declare your use of this facility to make that visible to the user." name="RECEIVE_BOOT_COMPLETED" protectionLevel="normal"/>
  <Permission apiLevel="1" category="SMS" constantValue="android.permission.RECEIVE_MMS" description="Allows an application to monitor incoming MMS messages." name="RECEIVE_MMS" protectionLevel="dangerous"/>
  <Permission apiLevel="1" category="SMS" constantValue="android.permission.RECEIVE_SMS" description="Allows an application to receive SMS messages." name="RECEIVE_SMS" protectionLevel="dangerous"/>
  <Permission apiLevel="1" category="SMS" constantValue="android.permission.RECEIVE_WAP_PUSH" description="Allows an application to receive WAP push messages." name="RECEIVE_WAP_PUSH" protectionLevel="dangerous"/>
  <Permission apiLevel="1" category="MICROPHONE" constantValue="android.permission.RECORD_AUDIO" description="Allows an application to record audio." name="RECORD_AUDIO" protectionLevel="dangerous"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.REORDER_TASKS" description="Allows an application to change the Z-order of tasks." name="REORDER_TASKS" protectionLevel="normal"/>
  <Permission apiLevel="26" category="" constantValue="android.permission.REQUEST_COMPANION_RUN_IN_BACKGROUND" description="Allows a companion app to run in the background." name="REQUEST_COMPANION_RUN_IN_BACKGROUND" protectionLevel="normal"/>
  <Permission apiLevel="26" category="" constantValue="android.permission.REQUEST_COMPANION_USE_DATA_IN_BACKGROUND" description="Allows a companion app to use data in the background." name="REQUEST_COMPANION_USE_DATA_IN_BACKGROUND" protectionLevel="normal"/>
  <Permission apiLevel="26" category="" constantValue="android.permission.REQUEST_DELETE_PACKAGES" description="Allows an application to request deleting packages. Apps targeting APIs greater than 25 must hold this permission in order to use ACTION_UNINSTALL_PACKAGE." name="REQUEST_DELETE_PACKAGES" protectionLevel="normal"/>
  <Permission apiLevel="23" category="" constantValue="android.permission.REQUEST_IGNORE_BATTERY_OPTIMIZATIONS" description="Permission an application must hold in order to use ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS. This is a normal permission: an app requesting it will always be granted the permission, without the user needing to approve or see it." name="REQUEST_IGNORE_BATTERY_OPTIMIZATIONS" protectionLevel="unknown"/>
  <Permission apiLevel="23" category="" constantValue="android.permission.REQUEST_INSTALL_PACKAGES" description="Allows an application to request installing packages. Apps targeting APIs greater than 25 must hold this permission in order to use ACTION_INSTALL_PACKAGE." name="REQUEST_INSTALL_PACKAGES" protectionLevel="signature"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.RESTART_PACKAGES" description=" This constant was deprecated in API level 8. The restartPackage(String) API is no longer supported." name="RESTART_PACKAGES" protectionLevel="unknown"/>
  <Permission apiLevel="18" category="" constantValue="android.permission.SEND_RESPOND_VIA_MESSAGE" description="Allows an application (Phone) to send a request to other applications to handle the respond-via-message action during incoming calls." name="SEND_RESPOND_VIA_MESSAGE" protectionLevel="not_third_party"/>
  <Permission apiLevel="1" category="SMS" constantValue="android.permission.SEND_SMS" description="Allows an application to send SMS messages." name="SEND_SMS" protectionLevel="dangerous"/>
  <Permission apiLevel="9" category="" constantValue="com.android.alarm.permission.SET_ALARM" description="Allows an application to broadcast an Intent to set an alarm for the user." name="SET_ALARM" protectionLevel="normal"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.SET_ALWAYS_FINISH" description="Allows an application to control whether activities are immediately finished when put in the background." name="SET_ALWAYS_FINISH" protectionLevel="not_third_party"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.SET_ANIMATION_SCALE" description="Modify the global animation scaling factor." name="SET_ANIMATION_SCALE" protectionLevel="not_third_party"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.SET_DEBUG_APP" description="Configure an application for debugging." name="SET_DEBUG_APP" protectionLevel="not_third_party"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.SET_PREFERRED_APPLICATIONS" description=" This constant was deprecated in API level 7. No longer useful, see addPackageToPreferred(String) for details." name="SET_PREFERRED_APPLICATIONS" protectionLevel="unknown"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.SET_PROCESS_LIMIT" description="Allows an application to set the maximum number of (not needed) application processes that can be running." name="SET_PROCESS_LIMIT" protectionLevel="not_third_party"/>
  <Permission apiLevel="8" category="" constantValue="android.permission.SET_TIME" description="Allows applications to set the system time." name="SET_TIME" protectionLevel="not_third_party"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.SET_TIME_ZONE" description="Allows applications to set the system time zone." name="SET_TIME_ZONE" protectionLevel="not_third_party"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.SET_WALLPAPER" description="Allows applications to set the wallpaper." name="SET_WALLPAPER" protectionLevel="normal"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.SET_WALLPAPER_HINTS" description="Allows applications to set the wallpaper hints." name="SET_WALLPAPER_HINTS" protectionLevel="normal"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.SIGNAL_PERSISTENT_PROCESSES" description="Allow an application to request that a signal be sent to all persistent processes." name="SIGNAL_PERSISTENT_PROCESSES" protectionLevel="not_third_party"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.STATUS_BAR" description="Allows an application to open, close, or disable the status bar and its icons." name="STATUS_BAR" protectionLevel="not_third_party"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.SYSTEM_ALERT_WINDOW" description="Allows an app to create windows using the type TYPE_APPLICATION_OVERLAY, shown on top of all other apps. Very few apps should use this permission; these windows are intended for system-level interaction with the user. Note: If the app targets API level 23 or higher, the app user must explicitly grant this permission to the app through a permission management screen. The app requests the user's approval by sending an intent with action ACTION_MANAGE_OVERLAY_PERMISSION. The app can check whether it has this authorization by calling Settings.canDrawOverlays()." name="SYSTEM_ALERT_WINDOW" protectionLevel="signature"/>
  <Permission apiLevel="19" category="" constantValue="android.permission.TRANSMIT_IR" description="Allows using the device's IR transmitter, if available." name="TRANSMIT_IR" protectionLevel="normal"/>
  <Permission apiLevel="19" category="" constantValue="com.android.launcher.permission.UNINSTALL_SHORTCUT" description="This permission is no longer supported." name="UNINSTALL_SHORTCUT" protectionLevel="unknown"/>
  <Permission apiLevel="3" category="" constantValue="android.permission.UPDATE_DEVICE_STATS" description="Allows an application to update device statistics." name="UPDATE_DEVICE_STATS" protectionLevel="not_third_party"/>
  <Permission apiLevel="23" category="" constantValue="android.permission.USE_FINGERPRINT" description="Allows an app to use fingerprint hardware." name="USE_FINGERPRINT" protectionLevel="normal"/>
  <Permission apiLevel="9" category="PHONE" constantValue="android.permission.USE_SIP" description="Allows an application to use SIP service." name="USE_SIP" protectionLevel="dangerous"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.VIBRATE" description="Allows access to the vibrator." name="VIBRATE" protectionLevel="normal"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.WAKE_LOCK" description="Allows using PowerManager WakeLocks to keep processor from sleeping or screen from dimming." name="WAKE_LOCK" protectionLevel="normal"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.WRITE_APN_SETTINGS" description="Allows applications to write the apn settings." name="WRITE_APN_SETTINGS" protectionLevel="not_third_party"/>
  <Permission apiLevel="1" category="CALENDAR" constantValue="android.permission.WRITE_CALENDAR" description="Allows an application to write the user's calendar data." name="WRITE_CALENDAR" protectionLevel="dangerous"/>
  <Permission apiLevel="16" category="PHONE" constantValue="android.permission.WRITE_CALL_LOG" description="Allows an application to write (but not read) the user's call log data. Note: If your app uses the WRITE_CONTACTS permission and both your minSdkVersion and targetSdkVersion values are set to 15 or lower, the system implicitly grants your app this permission. If you don't need this permission, be sure your targetSdkVersion is 16 or higher." name="WRITE_CALL_LOG" protectionLevel="dangerous"/>
  <Permission apiLevel="1" category="CONTACTS" constantValue="android.permission.WRITE_CONTACTS" description="Allows an application to write the user's contacts data." name="WRITE_CONTACTS" protectionLevel="dangerous"/>
  <Permission apiLevel="4" category="STORAGE" constantValue="android.permission.WRITE_EXTERNAL_STORAGE" description="Allows an application to write to external storage. Note: If both your minSdkVersion and targetSdkVersion values are set to 3 or lower, the system implicitly grants your app this permission. If you don't need this permission, be sure your targetSdkVersion is 4 or higher. Starting in API level 19, this permission is not required to read/write files in your application-specific directories returned by getExternalFilesDir(String) and getExternalCacheDir()." name="WRITE_EXTERNAL_STORAGE" protectionLevel="dangerous"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.WRITE_GSERVICES" description="Allows an application to modify the Google service map." name="WRITE_GSERVICES" protectionLevel="not_third_party"/>
  <Permission apiLevel="3" category="" constantValue="android.permission.WRITE_SECURE_SETTINGS" description="Allows an application to read or write the secure system settings." name="WRITE_SECURE_SETTINGS" protectionLevel="not_third_party"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.WRITE_SETTINGS" description="Allows an application to read or write the system settings. Note: If the app targets API level 23 or higher, the app user must explicitly grant this permission to the app through a permission management screen. The app requests the user's approval by sending an intent with action ACTION_MANAGE_WRITE_SETTINGS. The app can check whether it has this authorization by calling Settings.System.canWrite()." name="WRITE_SETTINGS" protectionLevel="signature"/>
  <Permission apiLevel="1" category="" constantValue="android.permission.WRITE_SYNC_SETTINGS" description="Allows applications to write the sync settings." name="WRITE_SYNC_SETTINGS" protectionLevel="normal"/>
  <Permission apiLevel="21" category="" constantValue="com.android.voicemail.permission.WRITE_VOICEMAIL" description="Allows an application to modify and remove existing voicemails in the system." name="WRITE_VOICEMAIL" protectionLevel="signature|privileged"/>
 </Permissions>
</root>